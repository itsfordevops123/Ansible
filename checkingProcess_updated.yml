---
- hosts: groupA
  become: true
  become_method: sudo
  become_user: root
  max_fail_percentage: 10  #Abort the playbook if failed percentage morethan specified
  tasks:
    - name: Checking running Process
      shell: |
        printf "\n"
        ps -e -o user,pid,ppid,args |grep httpd|awk '{print $1,$2,$4}' &&  ps -e -o user,pid,ppid,args |grep java |awk '{print $1,$2, $5}'| egrep '[httpd,java]'
        if [[ $? -eq 0 ]]                                                   #$? Register the output of most recent command
            then 
            printf "\n"
            printf "\t OK: Apache Httpd and Tomee applications are running...\n"
            else
            printf "\t  Error: No Process are running.. \n"
        fi
      changed_when: false
      register: service_apache_status     # Register the shell script command output
      become: true
      become_method: sudo
      become_user: appedt
      failed_when: service_apache_status.rc!=0
    - debug: var="service_apache_status.stdout_lines + [service_apache_status.stderr]"  
    
    - name: Starting Pawnee Tomee Applications
      shell: | /tmp/hema/pawnee/startup.sh
      register: pawnee_start_status
      become: true
      become_method: sudo
      become_user: appedt
      vars:
        ansible_command_timeout: 300        


    - name: Checking running Process
      shell: |
        printf "\n"
        ps -e -o user,pid,ppid,args |grep httpd|awk '{print $1,$2,$4}' &&  ps -e -o user,pid,ppid,args |grep java |awk '{print $1,$2, $5}'| egrep '[httpd,java]'
        if [[ $? -eq 0 ]]                                                   #$? Register the output of most recent command
            then 
            printf "\n"
            printf "\t OK: Apache Httpd and Tomee applications are running...\n"
            else
            printf "\t  Error: No Process are running.. \n"
        fi
      changed_when: false
      register: service_apache_status     # Register the shell script command output
      become: true
      become_method: sudo
      become_user: appedt
      failed_when: service_apache_status.rc!=0
    - debug: var="service_apache_status.stdout_lines + [service_apache_status.stderr]"
    